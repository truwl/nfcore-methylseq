parameter_meta:
  methylseq.samplesheet:
    description: Input FastQ files.
    group: input_output_options
    help: 'Use this to specify the location of your input FastQ files. For example:


      ```bash

      --input ''path/to/data/sample_*_{1,2}.fastq''

      ```


      Please note the following requirements:


      1. The path must be enclosed in quotes

      2. The path must have at least one `*` wildcard character

      3. When using the pipeline with paired end data, the path must use `{1,2}` notation
      to specify read pairs.


      If left unspecified, a default pattern is used: `data/*{1,2}.fastq.gz`'
    hidden: false
  methylseq.single_end:
    description: Specifies that the input is single-end reads.
    group: input_output_options
    help: 'By default, the pipeline expects paired-end data. If you have single-end
      data, you need to specify `--single_end` on the command line when you launch
      the pipeline. A normal glob pattern, enclosed in quotation marks, can then be
      used for `--input`. For example:


      ```bash

      --single_end --input ''*.fastq''

      ```


      It is not possible to run a mixture of single-end and paired-end files in one
      run.'
    hidden: false
  methylseq.outdir:
    description: The output directory where the results will be saved.
    group: input_output_options
    help: ''
    hidden: false
  methylseq.email:
    description: Email address for completion summary.
    group: input_output_options
    help: Set this parameter to your e-mail address to get a summary e-mail with details
      of the run sent to you when the workflow exits. If set in your user config file
      (`~/.nextflow/config`) then you don't need to specify this on the command line
      for every run.
    hidden: false
  methylseq.aligner:
    description: Alignment tool to use.
    group: alignment_options
    help: 'The nf-core/methylseq package is actually two pipelines in one. The default
      workflow uses [Bismark](http://www.bioinformatics.babraham.ac.uk/projects/bismark/)
      with [Bowtie2](http://bowtie-bio.sourceforge.net/bowtie2/index.shtml) as alignment
      tool: unless specified otherwise, nf-core/methylseq will run this pipeline.


      Since bismark v0.21.0 it is also possible to use [HISAT2](https://ccb.jhu.edu/software/hisat2/index.shtml)
      as alignment tool. To run this workflow, invoke the pipeline with the command
      line flag `--aligner bismark_hisat`. HISAT2 also supports splice-aware alignment
      if analysis of RNA is desired (e.g. [SLAMseq](https://science.sciencemag.org/content/360/6390/800)
      experiments), a file containing a list of known splicesites can be provided
      with `--known_splices`.


      The second workflow uses [BWA-Meth](https://github.com/brentp/bwa-meth) and
      [MethylDackel](https://github.com/dpryan79/methyldackel) instead of Bismark.
      To run this workflow, run the pipeline with the command line flag `--aligner
      bwameth`.'
    hidden: false
  methylseq.comprehensive:
    description: Output information for all cytosine contexts.
    group: alignment_options
    help: 'By default, the pipeline only produces data for cytosine methylation states
      in CpG context. Specifying `--comprehensive` makes the pipeline give results
      for all cytosine contexts. Note that for large genomes (e.g. Human), these can
      be massive files. This is only recommended for small genomes (especially those
      that don''t exhibit strong CpG context methylation specificity).


      If specified, this flag instructs the Bismark methylation extractor to use the
      `--comprehensive` and `--merge_non_CpG` flags. This produces coverage files
      with information from about all strands and cytosine contexts merged into two
      files - one for CpG context and one for non-CpG context.


      If using the bwa-meth workflow, the flag makes MethylDackel report CHG and CHH
      contexts as well.'
    hidden: false
  methylseq.save_align_intermeds:
    description: Save aligned intermediates to results directory
    group: alignment_options
    help: ''
    hidden: true
  methylseq.pbat:
    description: Preset for working with PBAT libraries.
    group: special_library_types
    help: 'Specify this parameter when working with PBAT _(Post Bisulfite Adapter
      Tagging)_ libraries.


      Using this parameter sets the `--pbat` flag when aligning with Bismark. This
      tells Bismark to align complementary strands (the opposite of `--directional`).


      Additionally, this is a trimming preset equivalent to `--clip_r1 6` `--clip_r2
      9` `--three_prime_clip_r1 6` `--three_prime_clip_r2 9`'
    hidden: false
  methylseq.rrbs:
    description: Turn on if dealing with MspI digested material.
    group: special_library_types
    help: 'Use this parameter when working with RRBS _(Reduced Representation Bisulfite
      Sequencing)_ data, that is digested using MspI.


      Specifying `--rrbs` will pass on the `--rrbs` parameter to TrimGalore! See the
      [TrimGalore! documentation](https://github.com/FelixKrueger/TrimGalore/blob/master/Docs/Trim_Galore_User_Guide.md#rrbs-specific-options-mspi-digested-material)
      to read more about the effects of this option.


      This parameter also makes the pipeline skip the deduplication step.'
    hidden: false
  methylseq.slamseq:
    description: Run bismark in SLAM-seq mode.
    group: special_library_types
    help: "Specify to run Bismark with the `--slam` flag to run bismark in [SLAM-seq\
      \ mode](https://github.com/FelixKrueger/Bismark/blob/master/CHANGELOG.md#slam-seq-mode)\
      \ \n\n> NB: Only works with when using the `bismark_hisat` aligner (`--aligner\
      \ bismark_hisat`)"
    hidden: false
  methylseq.em_seq:
    description: Preset for EM-seq libraries.
    group: special_library_types
    help: 'Equivalent to `--clip_r1 8` `--clip_r2 8` `--three_prime_clip_r1 8` `--three_prime_clip_r2
      8`.


      Also sets the `--maxins` flag to `1000` for Bismark.'
    hidden: false
  methylseq.single_cell:
    description: Trimming preset for single-cell bisulfite libraries.
    group: special_library_types
    help: 'Equivalent to `--clip_r1 6` `--clip_r2 6` `--three_prime_clip_r1 6` `--three_prime_clip_r2
      6`.


      Also sets the `--non_directional` flag for Bismark.'
    hidden: false
  methylseq.accel:
    description: Trimming preset for the Accel kit.
    group: special_library_types
    help: Equivalent to `--clip_r1 10` `--clip_r2 15` `--three_prime_clip_r1 10` `--three_prime_clip_r2
      10`
    hidden: false
  methylseq.cegx:
    description: Trimming preset for the CEGX bisulfite kit.
    group: special_library_types
    help: Equivalent to `--clip_r1 6` `--clip_r2 6` `--three_prime_clip_r1 2` `--three_prime_clip_r2
      2`
    hidden: false
  methylseq.epignome:
    description: Trimming preset for the Epignome kit.
    group: special_library_types
    help: Equivalent to `--clip_r1 8` `--clip_r2 8` `--three_prime_clip_r1 8` `--three_prime_clip_r2
      8`
    hidden: false
  methylseq.zymo:
    description: Trimming preset for the Zymo kit.
    group: special_library_types
    help: 'Equivalent to `--clip_r1 10` `--clip_r2 15` `--three_prime_clip_r1 10`
      `--three_prime_clip_r2 10`.


      Also sets the `--non_directional` flag for Bismark.'
    hidden: false
  methylseq.genome:
    description: Name of iGenomes reference.
    group: reference_genome_options
    help: 'If using a reference genome configured in the pipeline using iGenomes,
      use this parameter to give the ID for the reference. This is then used to build
      the full paths for all required reference genome files e.g. `--genome GRCh38`.


      See the [nf-core website docs](https://nf-co.re/usage/reference_genomes) for
      more details.'
    hidden: false
  methylseq.fasta:
    description: Path to FASTA genome file.
    group: reference_genome_options
    help: 'If you have no genome reference available, the pipeline can build one using
      a FASTA file. This requires additional time and resources, so it''s better to
      use a pre-build index if possible. You can use the command line option `--save_reference`
      to keep the generated references so that they can be added to your config and
      used again in the future.


      Note that the `bwa-meth` workflow always needs a FASTA file, for methylation
      calling.'
    hidden: false
  methylseq.fasta_index:
    description: Path to Fasta index file.
    group: reference_genome_options
    help: The FASTA index file (`.fa.fai`) is only needed when using the bwa_meth
      aligner. It is used by MethylDackel. If using Bismark this parameter is ignored.
    hidden: false
  methylseq.bismark_index:
    description: Path to a directory containing a Bismark reference index.
    group: reference_genome_options
    help: ''
    hidden: false
  methylseq.bwa_meth_index:
    description: bwameth index filename base
    group: reference_genome_options
    help: 'The base filename for a bwa-meth genome reference index. Only used when
      using the bwa-meth aligner.


      Note that this is not a complete path, but rather a common filename _base_.
      For example, if you have file paths such as `/path/to/ref/genome.fa.bwameth.c2t.bwt`,
      you should specify `/path/to/ref/genome.fa`.'
    hidden: false
  methylseq.save_reference:
    description: Save reference(s) to results directory
    group: reference_genome_options
    help: ''
    hidden: false
  methylseq.igenomes_base:
    description: Directory / URL base for iGenomes references.
    group: reference_genome_options
    help: ''
    hidden: true
  methylseq.igenomes_ignore:
    description: Do not load the iGenomes reference config.
    group: reference_genome_options
    help: Do not load `igenomes.config` when running the pipeline. You may choose
      this option if you observe clashes between custom parameters and those supplied
      in `igenomes.config`.
    hidden: true
  methylseq.clip_r1:
    description: Trim bases from the 5' end of read 1 (or single-end reads).
    group: adapter_trimming
    help: ''
    hidden: false
  methylseq.clip_r2:
    description: Trim bases from the 5' end of read 2 (paired-end only).
    group: adapter_trimming
    help: ''
    hidden: false
  methylseq.three_prime_clip_r1:
    description: Trim bases from the 3' end of read 1 AFTER adapter/quality trimming.
    group: adapter_trimming
    help: ''
    hidden: false
  methylseq.three_prime_clip_r2:
    description: Trim bases from the 3' end of read 2 AFTER adapter/quality trimming
    group: adapter_trimming
    help: ''
    hidden: false
  methylseq.save_trimmed:
    description: Save trimmed reads to results directory.
    group: adapter_trimming
    help: By default, trimmed FastQ files will not be saved to the results directory.
      Specify this flag (or set to true in your config file) to copy these files to
      the results directory when complete.
    hidden: true
  methylseq.non_directional:
    description: Run alignment against all four possible strands.
    group: bismark_options
    help: 'By default, Bismark assumes that libraries are directional and does not
      align against complementary strands. If your library prep was not directional,
      use `--non_directional` to align against all four possible strands.


      Note that the `--single_cell` and `--zymo` parameters both set the `--non_directional`
      workflow flag automatically.'
    hidden: false
  methylseq.cytosine_report:
    description: Output stranded cytosine report during Bismark's bismark_methylation_extractor
      step.
    group: bismark_options
    help: By default, Bismark does not produce stranded calls. With this option the
      output considers all Cs on both forward and reverse strands and reports their
      position, strand, trinucleotide context and methylation state.
    hidden: false
  methylseq.relax_mismatches:
    description: Turn on to relax stringency for alignment (set allowed penalty with
      --num_mismatches).
    group: bismark_options
    help: "By default, Bismark is pretty strict about which alignments it accepts\
      \ as valid. If you have good reason to believe that your reads will contain\
      \ more mismatches than normal, this flags can be used to relax the stringency\
      \ that Bismark uses when accepting alignments. This can greatly improve the\
      \ number of aligned reads you get back, but may negatively impact the quality\
      \ of your data.\n\nBismark uses the Bowtie alignment scoring mechanism to filter\
      \ reads. Mismatches cost `-6`, gap opening `-5` and gap extension `-2`. So,\
      \ a threshold of`-60` would allow 10 mismatches or ~ 8 x 1-2bp indels. The threshold\
      \ is dependent on the length of reads, so a penalty value is used where `penalty\
      \ * bp read length = threshold`.\n\nThe penalty value used by Bismark by default\
      \ is `0.2`, so for 100bp reads this would be a threshold of `-20`. \n\nIf you\
      \ specifying the `--relax_mismatches` pipeline flag, Bismark instead uses `0.6`,\
      \ or a threshold of `-60`. This adds the Bismark flag `--score_min L,0,-0.6`\
      \ to the alignment command.\n\nThe penalty value can be modified using the `--num_mismatches`\
      \ pipeline option."
    hidden: false
  methylseq.num_mismatches:
    description: 0.6 will allow a penalty of bp * -0.6 - for 100bp reads (bismark
      default is 0.2)
    group: bismark_options
    help: 'Customise the penalty in the function used to filter reads based on mismatches.
      The parameter `--relax_mismatches` must also be specified.


      See the parameter documentation for `--relax_mismatches` for an explanation.'
    hidden: false
  methylseq.unmapped:
    description: Save unmapped reads to FastQ files
    group: bismark_options
    help: Use the `--unmapped` flag to set the `--unmapped` flag with Bismark align
      and save the unmapped reads to FastQ files.
    hidden: false
  methylseq.meth_cutoff:
    description: Specify a minimum read coverage to report a methylation call
    group: bismark_options
    help: Use to discard any methylation calls with less than a given read coverage
      depth (in fold coverage) during Bismark's `bismark_methylation_extractor` step.
    hidden: false
  methylseq.known_splices:
    description: Supply a .gtf file containing known splice sites (bismark_hisat only).
    group: bismark_options
    help: 'Specify to run Bismark with the `--known-splicesite-infile` flag to run
      splice-aware alignment using HISAT2. A `.gtf` file has to be provided from which
      a list of known splicesites is created by the pipeline


      > NB: This only works when using the `bismark_hisat` aligner with `--align`'
    hidden: false
  methylseq.local_alignment:
    description: Allow soft-clipping of reads (potentially useful for single-cell
      experiments).
    group: bismark_options
    help: Specify to run Bismark with the `--local` flag to allow soft-clipping of
      reads. This should only be used with care in certain single-cell applications
      or PBAT libraries, which may produce chimeric read pairs. (See [Wu et al.](https://doi.org/10.1093/bioinformatics/btz125)).
    hidden: false
  methylseq.minins:
    description: The minimum insert size for valid paired-end alignments.
    group: bismark_options
    help: 'For example, if `--minins 60` is specified and a paired-end alignment consists
      of two 20-bp alignments in the appropriate orientation with a 20-bp gap between
      them, that alignment is considered valid (as long as `--maxins` is also satisfied).
      A 19-bp gap would not be valid in that case.


      Default: no flag (Bismark default: `0`).'
    hidden: false
  methylseq.maxins:
    description: The maximum insert size for valid paired-end alignments.
    group: bismark_options
    help: 'For example, if `--maxins 100` is specified and a paired-end alignment
      consists of two 20-bp alignments in the proper orientation with a 60-bp gap
      between them, that alignment is considered valid (as long as `--minins` is also
      satisfied). A 61-bp gap would not be valid in that case.


      Default: not specified. Bismark default: `500`.'
    hidden: false
  methylseq.bismark_align_cpu_per_multicore:
    description: Specify how many CPUs are required per --multicore for bismark align
    group: bismark_options
    help: 'The pipeline makes use of the `--multicore` option for Bismark align. When
      using this option, Bismark uses a large number of CPUs for every `--multicore`
      specified. The pipeline calculates the number of `--multicore` based on the
      resources available to the task. It divides the available CPUs by 3, or by 5
      if any of `--single_cell`, `--zymo` or `--non_directional` are specified. This
      is based on usage for a typical mouse genome.


      You may find when running the pipeline that Bismark is not using this many CPUs.
      To fine tune the usage and speed, you can specify an integer with `--bismark_align_cpu_per_multicore`
      and the pipeline will divide the available CPUs by this value instead.


      See the [bismark documentation](https://github.com/FelixKrueger/Bismark/tree/master/Docs#alignment)
      for more information.'
    hidden: true
  methylseq.bismark_align_mem_per_multicore:
    description: Specify how much memory is required per --multicore for bismark align
    group: bismark_options
    help: 'Exactly the same as with `--bismark_align_cpu_per_multicore`, but for memory.
      By default, the pipeline divides the available memory by `13.GB`, or `18.GB`
      if any of `--single_cell`, `--zymo` or `--non_directional` are specified.


      Note that the final `--multicore` value is based on the lowest limiting factor
      of both CPUs and memory.'
    hidden: true
  methylseq.min_depth:
    description: Specify a minimum read coverage for MethylDackel to report a methylation
      call.
    group: bwa_meth_options
    help: ''
    hidden: false
  methylseq.ignore_flags:
    description: MethylDackel - ignore SAM flags
    group: bwa_meth_options
    help: Run MethylDackel with the `--ignore_flags` option, to ignore SAM flags.
    hidden: false
  methylseq.methyl_kit:
    description: Save files for use with methylKit
    group: bwa_meth_options
    help: Run MethylDackel with the `--methyl_kit` option, to produce files suitable
      for use with the methylKit R package.
    hidden: false
  methylseq.skip_trimming:
    description: Skip read trimming.
    group: skip_pipeline_steps
    help: ''
    hidden: false
  methylseq.skip_deduplication:
    description: Skip deduplication step after alignment.
    group: skip_pipeline_steps
    help: 'Deduplication removes PCR duplicate reads after alignment. Specifying this
      option will skip this step, leaving duplicate reads in your data.


      Note that this is turned on automatically if `--rrbs` is specified.'
    hidden: false
  methylseq.help:
    description: Display help text.
    group: generic_options
    help: ''
    hidden: true
  methylseq.publish_dir_mode:
    description: Method used to save pipeline results to output directory.
    group: generic_options
    help: The Nextflow `publishDir` option specifies which intermediate files should
      be saved to the output directory. This option tells the pipeline what method
      should be used to move these files. See [Nextflow docs](https://www.nextflow.io/docs/latest/process.html#publishdir)
      for details.
    hidden: true
  methylseq.validate_params:
    description: Boolean whether to validate parameters against the schema at runtime
    group: generic_options
    help: ''
    hidden: true
  methylseq.email_on_fail:
    description: Email address for completion summary, only when pipeline fails.
    group: generic_options
    help: This works exactly as with `--email`, except emails are only sent if the
      workflow is not successful.
    hidden: true
  methylseq.plaintext_email:
    description: Send plain-text email instead of HTML.
    group: generic_options
    help: Set to receive plain-text e-mails instead of HTML formatted.
    hidden: true
  methylseq.max_multiqc_email_size:
    description: File size limit when attaching MultiQC reports to summary emails.
    group: generic_options
    help: If file generated by pipeline exceeds the threshold, it will not be attached.
    hidden: true
  methylseq.monochrome_logs:
    description: Do not use coloured log outputs.
    group: generic_options
    help: Set to disable colourful command line output and live life in monochrome.
    hidden: true
  methylseq.multiqc_config:
    description: Custom config file to supply to MultiQC.
    group: generic_options
    help: ''
    hidden: true
  methylseq.tracedir:
    description: Directory to keep pipeline Nextflow logs and reports.
    group: generic_options
    help: ''
    hidden: true
  methylseq.show_hidden_params:
    description: Show all params when using `--help`
    group: generic_options
    help: By default, parameters set as _hidden_ in the schema are not shown on the
      command line when a user runs with `--help`. Specifying this option will tell
      the pipeline to show all parameters.
    hidden: true
  methylseq.max_cpus:
    description: Maximum number of CPUs that can be requested for any single job.
    group: max_job_request_options
    help: Use to set an upper-limit for the CPU requirement for each process. Should
      be an integer e.g. `--max_cpus 1`
    hidden: true
  methylseq.max_memory:
    description: Maximum amount of memory that can be requested for any single job.
    group: max_job_request_options
    help: Use to set an upper-limit for the memory requirement for each process. Should
      be a string in the format integer-unit e.g. `--max_memory '8.GB'`
    hidden: true
  methylseq.max_time:
    description: Maximum amount of time that can be requested for any single job.
    group: max_job_request_options
    help: Use to set an upper-limit for the time requirement for each process. Should
      be a string in the format integer-unit e.g. `--max_time '2.h'`
    hidden: true
  methylseq.custom_config_version:
    description: Git commit id for Institutional configs.
    group: institutional_config_options
    help: 'Provide git commit id for custom Institutional configs hosted at `nf-core/configs`.
      This was implemented for reproducibility purposes. Default: `master`.


      ```bash

      ## Download and use config file with following git commit id

      --custom_config_version d52db660777c4bf36546ddb188ec530c3ada1b96

      ```'
    hidden: true
  methylseq.custom_config_base:
    description: Base directory for Institutional configs.
    group: institutional_config_options
    help: 'If you''re running offline, nextflow will not be able to fetch the institutional
      config files from the internet. If you don''t need them, then this is not a
      problem. If you do need them, you should download the files from the repo and
      tell nextflow where to find them with the `custom_config_base` option. For example:


      ```bash

      ## Download and unzip the config files

      cd /path/to/my/configs

      wget https://github.com/nf-core/configs/archive/master.zip

      unzip master.zip


      ## Run the pipeline

      cd /path/to/my/data

      nextflow run /path/to/pipeline/ --custom_config_base /path/to/my/configs/configs-master/

      ```


      > Note that the nf-core/tools helper package has a `download` command to download
      all required pipeline files + singularity containers + institutional configs
      in one go for you, to make this process easier.'
    hidden: true
  methylseq.hostnames:
    description: Institutional configs hostname.
    group: institutional_config_options
    help: ''
    hidden: true
  methylseq.config_profile_name:
    description: Institutional config name.
    group: institutional_config_options
    help: ''
    hidden: true
  methylseq.config_profile_description:
    description: Institutional config description.
    group: institutional_config_options
    help: ''
    hidden: true
  methylseq.config_profile_contact:
    description: Institutional config contact information.
    group: institutional_config_options
    help: ''
    hidden: true
  methylseq.config_profile_url:
    description: Institutional config URL link.
    group: institutional_config_options
    help: ''
    hidden: true
parameter_group:
  input_output_options:
    description: Define where the pipeline should find input data and save output
      data.
    help: null
    title: Input/output options
  alignment_options:
    description: ''
    help: null
    title: Alignment options
  special_library_types:
    description: Presets for working with specific bisulfite library preparation methods.
    help: null
    title: Special library types
  reference_genome_options:
    description: Options for the reference genome indices used to align reads.
    help: null
    title: Reference genome options
  adapter_trimming:
    description: Bisulfite libraries often require additional base pairs to be removed
      from the ends of the reads before alignment.
    help: 'In addition to manually specifying bases to be specified, the pipeline
      has a number of parameter presets:


      | Parameter       | 5'' R1 Trim | 5'' R2 Trim | 3'' R1 Trim | 3'' R2 Trim |

      |-----------------|------------|------------|------------|------------|

      | `--pbat`        | 6          | 9          | 6          | 9          |

      | `--single_cell` | 6          | 6          | 6          | 6          |

      | `--epignome`    | 8          | 8          | 8          | 8          |

      | `--accel`       | 10         | 15         | 10         | 10         |

      | `--zymo`        | 10         | 15         | 10         | 10         |

      | `--cegx`        | 6          | 6          | 2          | 2          |


      Note that you can use the `--skip_trimming` parameter to skip trimming completely.'
    title: Adapter Trimming
  bismark_options:
    description: Parameters specific to the Bismark workflow
    help: null
    title: Bismark options
  bwa_meth_options:
    description: ''
    help: null
    title: bwa-meth options
  skip_pipeline_steps:
    description: ''
    help: null
    title: Skip pipeline steps
  generic_options:
    description: Less common options for the pipeline, typically set in a config file.
    help: 'These options are common to all nf-core pipelines and allow you to customise
      some of the core preferences for how the pipeline runs.


      Typically these options would be set in a Nextflow config file loaded for all
      pipeline runs, such as `~/.nextflow/config`.'
    title: Generic options
  max_job_request_options:
    description: Set the top limit for requested resources for any single job.
    help: 'If you are running on a smaller system, a pipeline step requesting more
      resources than are available may cause the Nextflow to stop the run with an
      error. These options allow you to cap the maximum resources requested by any
      single job so that the pipeline will run on your system.


      Note that you can not _increase_ the resources requested by any job using these
      options. For that you will need your own configuration file. See [the nf-core
      website](https://nf-co.re/usage/configuration) for details.'
    title: Max job request options
  institutional_config_options:
    description: Parameters used to describe centralised config profiles. These should
      not be edited.
    help: The centralised nf-core configuration profiles use a handful of pipeline
      parameters to describe themselves. This information is then printed to the Nextflow
      log when you run a pipeline. You should not need to change these values when
      you run a pipeline.
    title: Institutional config options
